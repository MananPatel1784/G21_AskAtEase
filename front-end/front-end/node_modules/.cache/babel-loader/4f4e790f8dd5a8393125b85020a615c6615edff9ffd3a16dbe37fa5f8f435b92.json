{"ast":null,"code":"import { r as registerAuth, i as initializeAuth, a as indexedDBLocalPersistence, c as connectAuthEmulator } from './register-77f1d56a.js';\nexport { Y as ActionCodeURL, m as AuthCredential, A as AuthErrorCodes, E as EmailAuthCredential, q as EmailAuthProvider, F as FacebookAuthProvider, t as GithubAuthProvider, G as GoogleAuthProvider, O as OAuthCredential, w as OAuthProvider, P as PhoneAuthCredential, S as SAMLAuthProvider, T as TotpMultiFactorGenerator, b as TotpSecret, x as TwitterAuthProvider, J as applyActionCode, e as beforeAuthStateChanged, K as checkActionCode, I as confirmPasswordReset, c as connectAuthEmulator, M as createUserWithEmailAndPassword, l as debugErrorMap, k as deleteUser, V as fetchSignInMethodsForEmail, a4 as getAdditionalUserInfo, a1 as getIdToken, a2 as getIdTokenResult, a6 as getMultiFactorResolver, n as inMemoryPersistence, a as indexedDBLocalPersistence, i as initializeAuth, d as initializeRecaptchaConfig, R as isSignInWithEmailLink, B as linkWithCredential, a7 as multiFactor, f as onAuthStateChanged, o as onIdTokenChanged, Z as parseActionCodeURL, p as prodErrorMap, C as reauthenticateWithCredential, a5 as reload, j as revokeAccessToken, W as sendEmailVerification, H as sendPasswordResetEmail, Q as sendSignInLinkToEmail, s as setPersistence, y as signInAnonymously, z as signInWithCredential, D as signInWithCustomToken, N as signInWithEmailAndPassword, U as signInWithEmailLink, h as signOut, a3 as unlink, g as updateCurrentUser, $ as updateEmail, a0 as updatePassword, _ as updateProfile, u as useDeviceLanguage, v as validatePassword, X as verifyBeforeUpdateEmail, L as verifyPasswordResetCode } from './register-77f1d56a.js';\nimport { _getProvider, getApp } from '@firebase/app';\nimport { getDefaultEmulatorHost } from '@firebase/util';\nimport 'tslib';\nimport '@firebase/component';\nimport '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\r\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\r\n *\r\n * @param app - The Firebase App.\r\n *\r\n * @public\r\n */\nfunction getAuth(app = getApp()) {\n  const provider = _getProvider(app, 'auth');\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n  const auth = initializeAuth(app, {\n    persistence: [indexedDBLocalPersistence]\n  });\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n  return auth;\n}\nregisterAuth(\"WebExtension\" /* ClientPlatform.WEB_EXTENSION */);\nexport { getAuth };","map":{"version":3,"names":["getAuth","app","getApp","provider","_getProvider","isInitialized","getImmediate","auth","initializeAuth","persistence","indexedDBLocalPersistence","authEmulatorHost","getDefaultEmulatorHost","connectAuthEmulator","registerAuth"],"sources":["E:\\Sem 5\\SE Proj\\G21_AskAtEase\\front-end\\front-end\\node_modules\\@firebase\\auth\\index.web-extension.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Core functionality shared by all clients\nexport * from './src';\n\nimport { ClientPlatform } from './src/core/util/version';\n\nimport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\n\nimport {\n  TotpMultiFactorGenerator,\n  TotpSecret\n} from './src/mfa/assertions/totp';\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Auth, connectAuthEmulator, initializeAuth } from './index.shared';\nimport { getDefaultEmulatorHost } from '@firebase/util';\nimport { registerAuth } from './src/core/auth/register';\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nfunction getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    persistence: [indexedDBLocalPersistence]\n  });\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nregisterAuth(ClientPlatform.WEB_EXTENSION);\n\nexport {\n  indexedDBLocalPersistence,\n  TotpMultiFactorGenerator,\n  TotpSecret,\n  getAuth\n};\n"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAkBH;;;;;;;AAOG;AACH,SAASA,OAAOA,CAACC,GAAmB,GAAAC,MAAM,EAAE;EAC1C,MAAMC,QAAQ,GAAGC,YAAY,CAACH,GAAG,EAAE,MAAM,CAAC;EAE1C,IAAIE,QAAQ,CAACE,aAAa,EAAE,EAAE;IAC5B,OAAOF,QAAQ,CAACG,YAAY,EAAE;EAC/B;EAED,MAAMC,IAAI,GAAGC,cAAc,CAACP,GAAG,EAAE;IAC/BQ,WAAW,EAAE,CAACC,yBAAyB;EACxC,EAAC;EAEF,MAAMC,gBAAgB,GAAGC,sBAAsB,CAAC,MAAM,CAAC;EACvD,IAAID,gBAAgB,EAAE;IACpBE,mBAAmB,CAACN,IAAI,EAAE,UAAUI,gBAAgB,EAAE,CAAC;EACxD;EAED,OAAOJ,IAAI;AACb;AAEAO,YAAY,mDAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}