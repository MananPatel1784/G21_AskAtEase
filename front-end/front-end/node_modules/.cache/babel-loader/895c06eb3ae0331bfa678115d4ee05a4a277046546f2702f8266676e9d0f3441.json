{"ast":null,"code":"import { _getProvider, getApp } from '@firebase/app';\nimport { _ as _signInWithRedirect, a as _reauthenticateWithRedirect, b as _linkWithRedirect, r as registerAuth, i as initializeAuth, c as indexedDBLocalPersistence, d as cordovaPopupRedirectResolver } from './popup_redirect-6fcd583a.js';\nexport { A as ActionCodeOperation, a6 as ActionCodeURL, y as AuthCredential, w as AuthErrorCodes, E as EmailAuthCredential, D as EmailAuthProvider, G as FacebookAuthProvider, F as FactorId, I as GithubAuthProvider, H as GoogleAuthProvider, z as OAuthCredential, J as OAuthProvider, O as OperationType, B as PhoneAuthCredential, P as ProviderId, K as SAMLAuthProvider, S as SignInMethod, T as TwitterAuthProvider, W as applyActionCode, j as beforeAuthStateChanged, e as browserLocalPersistence, f as browserSessionPersistence, X as checkActionCode, V as confirmPasswordReset, x as connectAuthEmulator, d as cordovaPopupRedirectResolver, Z as createUserWithEmailAndPassword, q as debugErrorMap, p as deleteUser, a3 as fetchSignInMethodsForEmail, ae as getAdditionalUserInfo, ab as getIdToken, ac as getIdTokenResult, ag as getMultiFactorResolver, g as getRedirectResult, C as inMemoryPersistence, c as indexedDBLocalPersistence, i as initializeAuth, h as initializeRecaptchaConfig, a1 as isSignInWithEmailLink, N as linkWithCredential, ah as multiFactor, k as onAuthStateChanged, o as onIdTokenChanged, a7 as parseActionCodeURL, t as prodErrorMap, Q as reauthenticateWithCredential, af as reload, n as revokeAccessToken, a4 as sendEmailVerification, U as sendPasswordResetEmail, a0 as sendSignInLinkToEmail, s as setPersistence, L as signInAnonymously, M as signInWithCredential, R as signInWithCustomToken, $ as signInWithEmailAndPassword, a2 as signInWithEmailLink, m as signOut, ad as unlink, l as updateCurrentUser, a9 as updateEmail, aa as updatePassword, a8 as updateProfile, u as useDeviceLanguage, v as validatePassword, a5 as verifyBeforeUpdateEmail, Y as verifyPasswordResetCode } from './popup_redirect-6fcd583a.js';\nimport '@firebase/util';\nimport 'tslib';\nimport '@firebase/component';\nimport '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction signInWithRedirect(auth, provider, resolver) {\n  return _signInWithRedirect(auth, provider, resolver);\n}\nfunction reauthenticateWithRedirect(user, provider, resolver) {\n  return _reauthenticateWithRedirect(user, provider, resolver);\n}\nfunction linkWithRedirect(user, provider, resolver) {\n  return _linkWithRedirect(user, provider, resolver);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getAuth(app = getApp()) {\n  const provider = _getProvider(app, 'auth');\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n  return initializeAuth(app, {\n    persistence: indexedDBLocalPersistence,\n    popupRedirectResolver: cordovaPopupRedirectResolver\n  });\n}\nregisterAuth(\"Cordova\" /* ClientPlatform.CORDOVA */);\nexport { getAuth, linkWithRedirect, reauthenticateWithRedirect, signInWithRedirect };","map":{"version":3,"names":["signInWithRedirect","auth","provider","resolver","_signInWithRedirect","reauthenticateWithRedirect","user","_reauthenticateWithRedirect","linkWithRedirect","_linkWithRedirect","getAuth","app","getApp","_getProvider","isInitialized","getImmediate","initializeAuth","persistence","indexedDBLocalPersistence","popupRedirectResolver","cordovaPopupRedirectResolver","registerAuth"],"sources":["E:\\Sem 5\\SE Proj\\G21_AskAtEase\\front-end\\front-end\\node_modules\\@firebase\\auth\\src\\platform_cordova\\strategies\\redirect.ts","E:\\Sem 5\\SE Proj\\G21_AskAtEase\\front-end\\front-end\\node_modules\\@firebase\\auth\\index.cordova.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User\n} from '../../model/public_types';\nimport {\n  _linkWithRedirect,\n  _reauthenticateWithRedirect,\n  _signInWithRedirect\n} from '../../platform_browser/strategies/redirect';\n\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<void>;\n}\n\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void> {\n  return _reauthenticateWithRedirect(user, provider, resolver) as Promise<void>;\n}\n\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<void>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the file that people using Cordova will actually import. You\n * should only include this file if you have something specific about your\n * implementation that mandates having a separate entrypoint. Otherwise you can\n * just use index.ts\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Auth } from './src/model/public_types';\nimport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\n\nimport { initializeAuth } from './src';\nimport { registerAuth } from './src/core/auth/register';\nimport { ClientPlatform } from './src/core/util/version';\n\nexport * from './index.shared';\n\n// Cordova also supports indexedDB / browserSession / browserLocal\nexport { indexedDBLocalPersistence } from './src/platform_browser/persistence/indexed_db';\nexport { browserLocalPersistence } from './src/platform_browser/persistence/local_storage';\nexport { browserSessionPersistence } from './src/platform_browser/persistence/session_storage';\nexport { getRedirectResult } from './src/platform_browser/strategies/redirect';\n\nexport { cordovaPopupRedirectResolver } from './src/platform_cordova/popup_redirect/popup_redirect';\nexport {\n  signInWithRedirect,\n  reauthenticateWithRedirect,\n  linkWithRedirect\n} from './src/platform_cordova/strategies/redirect';\n\nimport { cordovaPopupRedirectResolver } from './src/platform_cordova/popup_redirect/popup_redirect';\n\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  return initializeAuth(app, {\n    persistence: indexedDBLocalPersistence,\n    popupRedirectResolver: cordovaPopupRedirectResolver\n  });\n}\n\nregisterAuth(ClientPlatform.CORDOVA);\n"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;SAcaA,kBAAkBA,CAChCC,IAAU,EACVC,QAAsB,EACtBC,QAAgC;EAEhC,OAAOC,mBAAmB,CAACH,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,CAAkB;AACvE;SAEgBE,0BAA0BA,CACxCC,IAAU,EACVJ,QAAsB,EACtBC,QAAgC;EAEhC,OAAOI,2BAA2B,CAACD,IAAI,EAAEJ,QAAQ,EAAEC,QAAQ,CAAkB;AAC/E;SAEgBK,gBAAgBA,CAC9BF,IAAU,EACVJ,QAAsB,EACtBC,QAAgC;EAEhC,OAAOM,iBAAiB,CAACH,IAAI,EAAEJ,QAAQ,EAAEC,QAAQ,CAAkB;AACrE;;ACnDA;;;;;;;;;;;;;;;AAeG;AAkCa,SAAAO,OAAOA,CAACC,GAAA,GAAmBC,MAAM,EAAE;EACjD,MAAMV,QAAQ,GAAGW,YAAY,CAACF,GAAG,EAAE,MAAM,CAAC;EAE1C,IAAIT,QAAQ,CAACY,aAAa,EAAE,EAAE;IAC5B,OAAOZ,QAAQ,CAACa,YAAY,EAAE;EAC/B;EAED,OAAOC,cAAc,CAACL,GAAG,EAAE;IACzBM,WAAW,EAAEC,yBAAyB;IACtCC,qBAAqB,EAAEC;EACxB,EAAC;AACJ;AAEAC,YAAY,wCAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}